rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Function to check if the current user is an admin
    function isAdmin() {
      return request.auth != null && 
        (
          // Check token claims first
          request.auth.token.admin == true ||
          
          // Check email document if email exists
          (request.auth.token.email != null && 
           firestore.exists(/databases/(default)/documents/users/$(request.auth.token.email)) && 
           firestore.get(/databases/(default)/documents/users/$(request.auth.token.email)).data.isAdmin == true) ||
          
          // Check UID document
          (firestore.exists(/databases/(default)/documents/users/$(request.auth.uid)) && 
           firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin == true)
        );
    }
    
    // Function to check if the user is accessing their own data
    function isOwner(userId) {
      return request.auth != null && 
        (request.auth.token.email == userId || request.auth.uid == userId);
    }
    
    // Default rules for all files - no default access
    match /{allPaths=**} {
      allow read, write: if false;
    }
    
    // Rules for user profile images
    match /users/{userId}/profile.jpg {
      // Anyone authenticated can view profile images
      allow read: if request.auth != null;
      // Users can only upload their own profile image
      allow write: if isOwner(userId) || isAdmin();
    }
    
    // Rules for public assets
    match /public/{fileName} {
      // Anyone can read public assets
      allow read: if true;
      // Only admins can write public assets
      allow write: if isAdmin();
    }
    
    // Rules for course images
    match /courses/{courseId}/{fileName} {
      // Anyone can view course images (for marketing)
      allow read: if true;
      // Only admins can upload course images
      allow write: if isAdmin();
    }
    
    // Rules for experience images
    match /experiences/{experienceId}/{fileName} {
      // Anyone can view experience images (for marketing)
      allow read: if true;
      // Only admins can upload experience images
      allow write: if isAdmin();
    }
    
    // Rules for user uploads
    match /user-uploads/{userId}/{fileName} {
      // Users can view their own uploads, admins can view all
      allow read: if request.auth != null && (isOwner(userId) || isAdmin());
      // Users can upload their own files
      allow write: if isOwner(userId) || isAdmin();
    }
  }
} 