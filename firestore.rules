rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Function to check if the current user is an admin
    function isAdmin() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.token.email)) && 
        get(/databases/$(database)/documents/users/$(request.auth.token.email)).data.isAdmin == true;
    }
    
    // Allow public read access to all documents
    match /{document=**} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }
    
    // Rules for courses collection
    match /courses/{courseId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Rules for users collection
    match /users/{userId} {
      // Allow users to read and write their own user data
      allow read: if request.auth != null && (request.auth.token.email == userId || isAdmin());
      allow write: if request.auth != null && (request.auth.token.email == userId || isAdmin());
    }
    
    // Rules for other collections can be added here as needed
    match /experiences/{experienceId} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
} 